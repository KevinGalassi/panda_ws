;; Auto-generated. Do not edit!


(when (boundp 'planner::ComputeTrajectoryResult)
  (if (not (find-package "PLANNER"))
    (make-package "PLANNER"))
  (shadow 'ComputeTrajectoryResult (find-package "PLANNER")))
(unless (find-package "PLANNER::COMPUTETRAJECTORYRESULT")
  (make-package "PLANNER::COMPUTETRAJECTORYRESULT"))

(in-package "ROS")
;;//! \htmlinclude ComputeTrajectoryResult.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass planner::ComputeTrajectoryResult
  :super ros::object
  :slots (_FinalTrajectories _FinalLabel ))

(defmethod planner::ComputeTrajectoryResult
  (:init
   (&key
    ((:FinalTrajectories __FinalTrajectories) (let (r) (dotimes (i 0) (push (instance geometry_msgs::PoseArray :init) r)) r))
    ((:FinalLabel __FinalLabel) (let (r) (dotimes (i 0) (push "" r)) r))
    )
   (send-super :init)
   (setq _FinalTrajectories __FinalTrajectories)
   (setq _FinalLabel __FinalLabel)
   self)
  (:FinalTrajectories
   (&rest __FinalTrajectories)
   (if (keywordp (car __FinalTrajectories))
       (send* _FinalTrajectories __FinalTrajectories)
     (progn
       (if __FinalTrajectories (setq _FinalTrajectories (car __FinalTrajectories)))
       _FinalTrajectories)))
  (:FinalLabel
   (&optional __FinalLabel)
   (if __FinalLabel (setq _FinalLabel __FinalLabel)) _FinalLabel)
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/PoseArray[] _FinalTrajectories
    (apply #'+ (send-all _FinalTrajectories :serialization-length)) 4
    ;; string[] _FinalLabel
    (apply #'+ (mapcar #'(lambda (x) (+ 4 (length x))) _FinalLabel)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/PoseArray[] _FinalTrajectories
     (write-long (length _FinalTrajectories) s)
     (dolist (elem _FinalTrajectories)
       (send elem :serialize s)
       )
     ;; string[] _FinalLabel
     (write-long (length _FinalLabel) s)
     (dolist (elem _FinalLabel)
       (write-long (length elem) s) (princ elem s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/PoseArray[] _FinalTrajectories
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _FinalTrajectories (let (r) (dotimes (i n) (push (instance geometry_msgs::PoseArray :init) r)) r))
     (dolist (elem- _FinalTrajectories)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;; string[] _FinalLabel
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _FinalLabel (make-list n))
     (dotimes (i n)
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setf (elt _FinalLabel i) (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
     ))
   ;;
   self)
  )

(setf (get planner::ComputeTrajectoryResult :md5sum-) "40834ff98d5d7863bdb61af7ff11587a")
(setf (get planner::ComputeTrajectoryResult :datatype-) "planner/ComputeTrajectoryResult")
(setf (get planner::ComputeTrajectoryResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#result
geometry_msgs/PoseArray[] FinalTrajectories
string[] FinalLabel

================================================================================
MSG: geometry_msgs/PoseArray
# An array of poses with a header for global reference.

Header header

Pose[] poses

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :planner/ComputeTrajectoryResult "40834ff98d5d7863bdb61af7ff11587a")


